package ${pkgNameRepository};

import ${pkgNamePo}.${classNamePo};
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

@Repository
public interface ${businessClassName}Repository extends JpaRepository<${classNamePo}, Long>{

    @Query("""
    SELECT u FROM ${classNamePo} u
    WHERE
#foreach($field in $fields)
#if($foreach.first)
    (:#{#po.${field.javaFieldName}} IS NULL OR u.${field.javaFieldName} #if($field.fieldType == 'String') LIKE %:#{#po.${field.javaFieldName}}% #else = :#{#po.${field.javaFieldName}} #end)
#else
    AND (:#{#po.${field.javaFieldName}} IS NULL OR u.${field.javaFieldName} #if($field.fieldType == 'String') LIKE %:#{#po.${field.javaFieldName}}% #else = :#{#po.${field.javaFieldName}} #end)
#end
#end
    ORDER BY u.updateTime DESC
    """)
    Page<${classNamePo}> get${businessClassName}List(@Param("po") ${classNamePo} po, Pageable pageable);
}
