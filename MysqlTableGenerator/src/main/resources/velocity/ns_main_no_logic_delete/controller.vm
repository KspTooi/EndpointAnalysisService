package ${pkgNameController};

import com.baodian.common.utils.R;
import com.baodian.common.utils.LR;
import io.swagger.v3.oas.annotations.tags.Tag
import io.swagger.v3.oas.annotations.Operation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import jakarta.validation.Valid;
import com.ksptooi.biz.model.dto.GenericIdDto;
import com.ksptooi.biz.model.dto.GenericRemoveDto;

import ${pkgNameService}.${classNameService};
import ${pkgNameVo}.Get${businessClassName}ListVo;
import ${pkgNameDto}.Get${businessClassName}ListDto;
import ${pkgNameVo}.Get${businessClassName}DetailsVo;
import ${pkgNameDto}.Edit${classNameDto};
import ${pkgNameDto}.Add${classNameDto};

@RestController
@RequestMapping("/${requestMappingName}")
@Tag(name = "${apiTagName}", description = "${comments}")
@Slf4j
public class ${classNameController} {

    @Autowired
    private ${classNameService} ${fieldNameService};

    @Operation(description ="列表查询")
    @PostMapping("/get${businessClassName}List")
    public LR<Get${businessClassName}ListVo> get${businessClassName}List(@RequestBody @Valid Get${businessClassName}ListDto dto) {
        var vos = ${fieldNameService}.get${businessClassName}List(dto, dto.getPageNum(), dto.getPageSize());
        var count = ${fieldNameService}.count(dto);
        return LR.ok(vos,count);
    }

    @Operation(description ="新增")
    @PostMapping("/add${businessClassName}")
    public R<String> add${businessClassName}(@RequestBody @Valid Add${classNameDto} dto){
        var isSuccess = ${fieldNameService}.add${businessClassName}(dto);
        return R.ok("新增成功");
    }

    @Operation(description ="编辑")
    @PostMapping("/edit${businessClassName}")
    public R<String> edit${businessClassName}(@RequestBody @Valid Edit${classNameDto} dto) {
        var isSuccess = ${fieldNameService}.edit${businessClassName}(dto);
        return R.ok("修改成功");
    }

    @Operation(description ="查询详情")
    @PostMapping("/get${businessClassName}Details")
    public R<Get${businessClassName}DetailsVo> get${businessClassName}Details(@RequestBody @Valid GenericIdDto dto) {

        if (dto.getId() == null) {
            return R.fail("缺少请求参数");
        }

        var details = ${fieldNameService}.get${businessClassName}Details(dto.getId());

        if(details == null){
            return R.fail("无数据");
        }

        return R.ok(details);
    }

    @Operation(description ="删除")
    @PostMapping("/remove${businessClassName}")
    public R<String> remove${businessClassName}(@RequestBody @Valid GenericRemoveDto dto) {

        if (!dto.isValid()) {
            return R.fail("缺少必要参数");
        }

        boolean isSuccess = false;

        if(dto.isBatch()){
            isSuccess = ${fieldNameService}.remove${businessClassName}(dto.getIds());
        }else {
            isSuccess = ${fieldNameService}.remove${businessClassName}(dto.getId());
        }

        return R.ok("操作成功");
    }

}