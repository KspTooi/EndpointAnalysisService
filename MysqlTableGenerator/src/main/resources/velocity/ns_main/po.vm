package ${pkgNamePo};

import java.util.Date;
import lombok.Data;
import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import com.baomidou.mybatisplus.core.toolkit.IdWorker;
import com.ksptooi.commons.utils.entities.Entities;
import lombok.experimental.Accessors;

/**
* ${comments}实体类
*
* @author ${author}
* @date ${datetime}
*/

@TableName("${tableName}")
@Data
@Accessors(chain = true)
public class ${classNamePo}{

    public ${classNamePo}(){

    }

    public ${classNamePo}(Object any){
        Entities.copyProperties(any,this);
    }

    public <T> T toVo(Class<T> clazz){
        try{
            var vo = clazz.getDeclaredConstructor().newInstance();
            Entities.copyProperties(this,vo);
            return vo;
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }

    public ${classNamePo}(String initMode){
        if(initMode.equals("insert")){
        #if(${fieldHelper.exists('id')})
            this.setId(IdWorker.getId());
        #end
        #if(${fieldHelper.exists('createBy')})
            this.setCreateBy(SecurityUtils.getUser().getUsername());
        #end
        #if(${fieldHelper.exists('createTime')})
            this.setCreateTime(new Date());
        #end
        #if(${fieldHelper.exists('delStatus')})
            this.setDelStatus(0);
        #end
        }
        if(initMode.equals("update")){
        #if(${fieldHelper.exists('updateBy')})
            this.setUpdateBy(SecurityUtils.getUser().getUsername());
        #end
        #if(${fieldHelper.exists('updateTime')})
            this.setUpdateTime(new Date());
        #end
        #if(${fieldHelper.exists('delStatus')})
            this.setDelStatus(0);
        #end
        }
    }

    #foreach ($field in $fields)

    #if(${field.comment} != "")
    //${field.comment}
    #end
    #if(${field.primary})
    @TableId(type = IdType.ASSIGN_ID)
    #end
    private ${field.javaType} ${field.javaFieldName};
    #end

}

