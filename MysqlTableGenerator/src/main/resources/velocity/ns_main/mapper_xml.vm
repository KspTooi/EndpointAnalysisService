<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${pkgNameMapper}.${classNameMapper}">

	<resultMap id="poMap" type="${pkgNamePo}.${classNamePo}">
		#foreach ($field in $fields)
		<result column="${field.name}" property="${field.javaFieldName}"/>
		#end
	</resultMap>

	<!-- 表所有参数-->
	<sql id="tableCol">
		#foreach ($field in $fields)
		`${field.name}`#if($foreach.hasNext),#end
		#end
	</sql>

	<!-- 实体所有参数-->
	<sql id="voVal">
		#foreach ($field in $fields)
		#{val.${field.javaFieldName}}#if($foreach.hasNext),#end
		#end
	</sql>

	<sql id="where">
		<where>
			#foreach ($field in $fields)
			#if(${field.name} != ${logicRemoveField})
			<if test="val.${field.javaFieldName} != null">
				AND ${field.name} = #{val.${field.javaFieldName}}
			</if>
			#end
			#if(${field.name} == ${logicRemoveField})
			AND ${logicRemoveField} = ${logicExists}
			#end
			#end
		</where>
	</sql>

    <select id="count" resultType="Long">
        SELECT COUNT(1) FROM ${tableName}
        <include refid="where"/>
    </select>

    <insert id="insertBatch">
        INSERT IGNORE INTO ${tableName}
        (<include refid="tableCol"/>)
        VALUES
        <foreach collection="pos" item="val" separator=",">
            (#foreach ($field in $fields)
            #{val.${field.javaFieldName}}#if($foreach.hasNext),#end
			#end)
        </foreach>
    </insert>

	<select id="get${businessClassName}Page" resultType="${pkgNameVo}.${businessClassName}PageVo">
        SELECT <include refid="tableCol"/> FROM ${tableName}
        <include refid="where"/>
    </select>

	<delete id="removeByIds">
		UPDATE ${tableName}
		SET ${logicRemoveField} = ${logicRemoved}
		<where>
			<foreach collection="val" item="item" open="id in(" close=")" separator=",">
				#{item}
			</foreach>
			AND ${logicRemoveField} = ${logicExists}
		</where>
	</delete>

	#foreach ($field in $fields)
	#if(${field.primary})
	<delete id="removeBy${field.javaGetterName}">
		UPDATE ${tableName} SET ${logicRemoveField} = ${logicRemoved} WHERE ${field.name} = #{val} AND ${logicRemoveField} = ${logicExists}
	</delete>

	<select id="getBy${field.javaGetterName}s" resultMap="poMap">
		<if test="val != null and val.size() > 0">
			SELECT <include refid="tableCol"/> FROM ${tableName}
			<where>
				<foreach collection="val" item="item" open="(" close=")" separator=" OR ">
					${field.name} = #{item}
				</foreach>
				AND ${logicRemoveField} = ${logicExists}
			</where>
		</if>
	</select>

	<select id="getBy${field.javaGetterName}" resultMap="poMap">
		SELECT <include refid="tableCol"/> FROM ${tableName}
		WHERE ${field.name} = #{val} AND ${logicRemoveField} = ${logicExists}
		LIMIT 1
	</select>

#*	<update id="updateBy${field.javaGetterName}">
		<if test="val != null and val.${field.javaFieldName} !=null">
			UPDATE ${tableName} t
			<set>
				#foreach ($f1 in $fields)
				#if(${f1.name} != "create_date" && ${f1.name} != "create_by")
				<if test="val.${f1.javaFieldName} != null">
					t.${f1.name} = #{val.${f1.javaFieldName}},
				</if>
				#end
				#end
			</set>
			WHERE ${field.name} = #{val.${field.javaFieldName}} AND ${logicRemoveField} = ${logicExists}
		</if>
	</update>*#
	#end
	#end

</mapper>